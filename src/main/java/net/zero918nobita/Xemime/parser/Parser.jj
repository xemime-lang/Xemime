options {
    STATIC = false;
    MULTI = true;
    VISITOR = true;
    UNICODE_INPUT = true;
    JDK_VERSION = "1.8";
}

PARSER_BEGIN(Parser)

package net.zero918nobita.Xemime.parser;

import net.zero918nobita.Xemime.ast.*;
import java.io.*;

class Parser {
    private String sourceName; // ソースファイルの名前

    static final public String SOURCE_ENCODING = "UTF-8"; // ソースファイルのエンコーディング

    /**
     * スタンドアロンで構文解析をテストするためのエントリーポイントです。
     * @param args コマンドライン引数
     */
    public static void main(String[] args) {
        try {
            Parser parser =  new Parser(new BufferedReader(new FileReader(args[0])));
            parser.compilation_unit();
        } catch (ParseException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /*
    protected location(Token t) {
        return new Location(sourceName, t);
    }
    */
}

PARSER_END(Parser)

SKIP:
{
    " "
    | "\t"
    | "\n"
    | "\r"
    | < "//" (~[ "\n", "\r" ])* ( "\n" | "\r" | "\r\n" ) >
    | < "/*" (~[ "*" ])* "*" ( ~[ "/" ] (~[ "*" ])* "*" )* "/" >
}

TOKEN: {
    <ADD: "+">
    | <AND: "&&">
    | <DIV: "/">
    | <EQ: "==">
    | <G: ">">
    | <GE: ">=">
    | <IMPORT: "import">
    | <INTEGER: ["1"-"9"](["0"-"9"])*>
    | <L: "<">
    | <LE: "<=">
    | <MUL: "*">
    | <NE: "!=">
    | <NIL: "NIL">
    | <OR: "||">
    | <STATIC: "static">
    | <SUB: "-">
    | <T: "T">
}

TOKEN: {
    <IDENTIFIER: ["a"-"z", "A"-"Z", "_"] (["a"-"z", "A"-"Z", "_", "0"-"9"])*>
}

ExprNode primary() : {
    Token t;
    ExprNode n;
}
{
    t=<INTEGER>
    {
        return integerNode(t.image);
    }
}
